{"ast":null,"code":"// import {useEffect, useState} from 'react'\n\n// const PREFIX = 'codepen-clone-'\n\n// const useLocalStorage = (key, initialValue) => {\n//     const prefixedKey = PREFIX + key\n\n//     const [value, setValue] = useState(()=>{\n//         const jsonValue = localStorage.getItem(prefixedKey)\n//         if(jsonValue !=null) return JSON.parse(jsonValue)\n\n//         if(typeof initialValue === 'function'){\n//             return initialValue()\n//         }else{\n//             return initialValue\n//         }\n//     })\n\n//     useEffect(()=>{\n//         localStorage.setItem(prefixedKey, JSON.stringify(value))\n//     },[prefixedKey,value])\n\n//   return [value, setValue]\n// }\n\n// export default useLocalStorage","map":{"version":3,"names":[],"sources":["C:/Users/Administrator/Desktop/code editor/code-editor/src/hooks/useLocalStorage.js"],"sourcesContent":["// import {useEffect, useState} from 'react'\r\n\r\n// const PREFIX = 'codepen-clone-'\r\n\r\n// const useLocalStorage = (key, initialValue) => {\r\n//     const prefixedKey = PREFIX + key\r\n\r\n//     const [value, setValue] = useState(()=>{\r\n//         const jsonValue = localStorage.getItem(prefixedKey)\r\n//         if(jsonValue !=null) return JSON.parse(jsonValue)\r\n\r\n//         if(typeof initialValue === 'function'){\r\n//             return initialValue()\r\n//         }else{\r\n//             return initialValue\r\n//         }\r\n//     })\r\n\r\n//     useEffect(()=>{\r\n//         localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n//     },[prefixedKey,value])\r\n\r\n//   return [value, setValue]\r\n// }\r\n\r\n// export default useLocalStorage\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}